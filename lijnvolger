#include <ServoTimer2.h>
#include <VirtualWire.h>

/*
int ledA=3;
 int ledB=6;
 int ledC=4;
 int ledD=5;
 int a;
 int b;
 int c;
 int d;
 int analoogWaardeEen;
 int analoogWaardeTwee;
 int analoogWaardeDrie;
 int analoogWaardeVier;
 int geheugRechts;
 int geheugLinks;
 */

ServoTimer2 rechterservo;
ServoTimer2 linkerservo;


void setup()
{
  Serial.begin(9600);
  Serial.println("setup");
  rechterservo.attach(12);
  linkerservo.attach(13);
  //  pinMode(ledA,OUTPUT);
  //  pinMode(ledB,OUTPUT);
  //  pinMode(ledC,OUTPUT);
  //  pinMode(ledD,OUTPUT);

  vw_setup(2000);	 // Bits per sec
  vw_set_rx_pin(2);    //Rx Data pin to Digital  Pin 2
  vw_rx_start();       // Start the receiver PLL running

}

void loop()
{

  /*
   analoogWaardeEen  = analogRead(A0);
   analoogWaardeTwee = analogRead(A1);
   analoogWaardeDrie = analogRead(A2);
   analoogWaardeVier = analogRead(A3);
   
   
   Serial.println(analoogWaardeEen);  //print de waarde voor elke analoge input
   Serial.println(analoogWaardeTwee);
   Serial.println(analoogWaardeDrie);
   Serial.println(analoogWaardeVier);
   */

  uint8_t buf[VW_MAX_MESSAGE_LEN];
  uint8_t buflen = VW_MAX_MESSAGE_LEN;

  if (vw_get_message(buf, &buflen)) // Non-blocking
  {
    int i;

    digitalWrite(13, true);
    // Message with a good checksum received, dump it.
    for (i = 0; i < buflen; i++)
    {
      Serial.print(buf[i]);//print received command
      if(buf[i] == '1')
      {
        rechtdoor();//go forward
        Serial.println(" = forward");
      }
      if(buf[i] == '2')
      {
        achteruit();//go backward
        Serial.println(" = backward");
      }
      if(buf[i] == '3')
      {
        links();//go left
        Serial.println(" = left");
      }
      if(buf[i] == '4')
      {
        rechts();//go right
        Serial.println(" = right");
      }
      if(buf[i] == '5')
      {
        stop();//stop/brake
        Serial.println(" = stopped");
      }
      Serial.print(" ");
    }
    Serial.println("");
    digitalWrite(13, false);

  }





 /*if(analoogWaardeEen>400 )
   { 
   a = 1;
   digitalWrite(ledA,HIGH);
   }
   else
   { 
   a = 0;
   digitalWrite(ledA,LOW);
   }
   if(analoogWaardeTwee>400)
   { 
   b = 1;
   digitalWrite(ledB,HIGH);
   }
   else
   { 
   b = 0;
   digitalWrite(ledB,LOW);
   }
   if(analoogWaardeDrie>400)
   { 
   c = 1;
   digitalWrite(ledC,HIGH);
   }
   else
   { 
   c = 0;
   digitalWrite(ledC,LOW);
   }
   if(analoogWaardeVier>400)
   { 
   d = 1;
   digitalWrite(ledD,HIGH);
   }
   else
   { 
   d = 0;
   digitalWrite(ledD,LOW);
   }
   if (a==1 && c==1||c==1||d==1 && b==1 && c==1||a==1|| a==1 && b==1 && c==1||a==1 && d==1 && c==1|| d==0 && b==0 ){
   rechtdoor();
   }
   if (b==1||c==1 && b==1){
   links();
   }
   if (d==1||d==1 && c==1){
   rechts();
   }
   if (a==0 && b==0 && c==0 && d==0){
   //poep();
   }
   //    for(d==1;){
   //   geheugRechts=1;
   //   }
   //   for (b==1;){
   //   geheugLinks=1;
   //   }
   Serial.println(a);
   Serial.println(b);
   Serial.println(c);
   Serial.println(d);
*/

}

void rechtdoor()
{
  linkerservo.write(2400);
  rechterservo.write(544);
  Serial.println("rechtdoor aangeroepen");
}

void links ()
{
  linkerservo.write(1200);
  rechterservo.write(1200);
}

void rechts ()
{
  linkerservo.write(1800);
  rechterservo.write(1800);
}



void achteruit()
{
  linkerservo.write(544);
  rechterservo.write(2400);
}

void stop()
{
  linkerservo.write(1472);
  rechterservo.write(1472);
}



/*void poep()
 { 
 if (geheugRechts=1)
 {
 rechts;
 geheugLinks=0;
 }
 else (geheugLinks=1);
 {
 links;
 geheugRechts=0;
 }
 }
 */








